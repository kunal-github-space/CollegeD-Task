{"version":3,"sources":["StaticsData/college_01.jpg","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Dashboard","state","colleges","startingIndex","endingIndex","fetchDataInitial","mininalColleges","CollegeData","slice","setState","loadMoreData","length","moreData","finalData","handleScroll","e","lastCard","document","querySelector","lastCardOffset","offsetTop","clientHeight","window","pageYOffset","innerHeight","componentDidMount","scrollListener","addEventListener","showCollegeCards","this","map","item","index","nearestArray","famous_nearest_places","split","offerArray","offertext","console","log","className","key","src","collegePic","alt","type","tags","ranking","rating","rating_remarks","college_name","nearest_place","original_fees","discount","discounted_fees","fees_cycle","amenties","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c1f3b326.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/college_01.8793ec0e.jpg\";","import React, { Component } from \"react\";\r\nimport CollegeData from \"./StaticsData/colleges.json\";\r\nimport collegePic from \"./StaticsData/college_01.jpg\";\r\n\r\nclass Dashboard extends Component {\r\n  state = { colleges: [], startingIndex: 0, endingIndex: 10 };\r\n\r\n  fetchDataInitial = () => {\r\n    const { startingIndex, endingIndex } = this.state;\r\n\r\n    let mininalColleges = CollegeData.colleges.slice(\r\n      startingIndex,\r\n      endingIndex\r\n    );\r\n\r\n    this.setState({ colleges: mininalColleges });\r\n  };\r\n\r\n  loadMoreData = () => {\r\n    if (CollegeData.colleges.length === this.state.startingIndex + 10) {\r\n      return;\r\n    } else {\r\n      this.setState(\r\n        {\r\n          startingIndex: this.state.startingIndex + 10,\r\n          endingIndex: this.state.endingIndex + 10,\r\n        },\r\n        () => {\r\n          let moreData = CollegeData.colleges.slice(\r\n            this.state.startingIndex,\r\n            this.state.endingIndex\r\n          );\r\n          let finalData = [...this.state.colleges, ...moreData];\r\n          this.setState({ colleges: finalData });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  handleScroll = (e) => {\r\n    // console.log(\"Scrolled !!!!\");\r\n    let lastCard = document.querySelector(\"div.card-main-wrapper:last-of-type\");\r\n    const lastCardOffset = lastCard.offsetTop + lastCard.clientHeight;\r\n    const pageOffset = window.pageYOffset + window.innerHeight;\r\n    var bottomOffset = 20;\r\n    if (pageOffset > lastCardOffset - bottomOffset) {\r\n      this.loadMoreData();\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.fetchDataInitial();\r\n    this.scrollListener = window.addEventListener(\"scroll\", (e) => {\r\n      this.handleScroll(e);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { colleges } = this.state;\r\n\r\n    const showCollegeCards = colleges.map((item, index) => {\r\n      let nearest = item.famous_nearest_places;\r\n      let nearestArray = nearest.split(\" \");\r\n\r\n      let offerText = item.offertext;\r\n      let offerArray = offerText.split(\" \");\r\n      console.log(offerArray);\r\n\r\n      return (\r\n        <div className=\"card-main-wrapper\" key={index}>\r\n          <div className=\"top-card-wrapper position-relative\">\r\n            <img src={collegePic} alt={`College${index}`} />\r\n            <div className=\"backdrop position-absolute\" />\r\n            <button\r\n              type=\"button\"\r\n              className=\"img-button-white-one position-absolute\"\r\n            >\r\n              {item.tags[0]}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"img-button-white-two position-absolute\"\r\n            >\r\n              {item.tags[1]}\r\n            </button>\r\n            <p className=\"ranking-text position-absolute\">#{item.ranking}</p>\r\n            <button className=\"rating-img-top position-absolute\">\r\n              <span className=\"rate\">\r\n                {\" \"}\r\n                <span className=\"variable\">{item.rating}</span>\r\n                <span>/5</span>\r\n              </span>\r\n              <span className=\"comment\">{item.rating_remarks}</span>\r\n            </button>\r\n            <div className=\"promoted-text position-absolute\">PROMOTED</div>\r\n            <div className=\"arrow-right position-absolute\" />\r\n          </div>\r\n          <div className=\"bottom-card-wrapper\">\r\n            <div className=\"bottom-upper-wrapper\">\r\n              <div className=\"bottom-left-card\">\r\n                <div className=\"d-flex mb-7\">\r\n                  <p className=\"college-name\">{item.college_name}</p>{\" \"}\r\n                  <p className=\"ml-2\">\r\n                    <span className=\"fa fa-star\"></span>\r\n                    <span className=\"fa fa-star\"></span>\r\n                    <span className=\"fa fa-star\"></span>\r\n                    <span className=\"fa fa-star\"></span>\r\n                    <span className=\"fa fa-star non-checked\"></span>\r\n                  </p>\r\n                </div>\r\n                <div className=\"d-flex mb-7 location\">\r\n                  <p>{item.nearest_place[0]}</p>{\" \"}\r\n                  <span className=\"ml-2\"> | </span>{\" \"}\r\n                  <span className=\"ml-2 light\">{item.nearest_place[1]}</span>\r\n                </div>\r\n                <div className=\"d-flex mb-7 location\">\r\n                  <span className=\"green\">93% Match :</span>{\" \"}\r\n                  <span className=\"dark ml-2\">{nearestArray[0]}</span>{\" \"}\r\n                  <span className=\"ml-2\">{`${nearestArray[1]} ${nearestArray[2]} ${nearestArray[3]}`}</span>{\" \"}\r\n                  <span className=\"dark ml-2\">{`${nearestArray[4]} ${nearestArray[5]}`}</span>{\" \"}\r\n                  <span className=\"ml-2\">{`${nearestArray[6]}  ${nearestArray[7]} ${nearestArray[8]}`}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"bottom-right-card\">\r\n                <div className=\"d-flex right-flex\">\r\n                  <span className=\"strike\">₹{item.original_fees}</span>{\" \"}\r\n                  <div className=\"red-box\">\r\n                    {item.discount}{\" \"}\r\n                    <div className=\"arrow-left position-absolute\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"price\">\r\n                  <span> ₹{item.discounted_fees}</span>\r\n                </div>\r\n                <div className=\"duration\">\r\n                  <span>{item.fees_cycle}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"bottom-lower-wrapper d-flex\">\r\n              <div className=\"bottom-lower-left\">\r\n                <span>{offerArray[0]}</span> <span className=\"dark\">{offerArray[0]}</span>{\" \"}\r\n                <span className=\"dark green\">{offerArray[2]}</span>{\" \"}\r\n                <span className=\"dark\">{`${offerArray[3]} ${offerArray[4]} ${offerArray[5]} ${offerArray[6]}`}</span>{\" \"}\r\n                <span className=\"dark\">{`${offerArray[7]}`}</span>{\" \"}\r\n                <span className=\"dark\">{`${offerArray[8]} ${offerArray[9]} ${offerArray[10]}`}</span>{\" \"}\r\n                <span className=\"dark blue ml-2\">{offerArray[11]}</span>\r\n              </div>\r\n              <div className=\"bottom-lower-right\">\r\n                <span>{item.amenties[0]}</span> <span>.</span>{\" \"}\r\n                <span>{item.amenties[1]}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <main>\r\n          <div className=\"container\">\r\n            <div className=\"main-heading py-50\">\r\n              <p className=\"heading\">Colleges in North India</p>\r\n            </div>\r\n            <div className=\"main-cards-wrapper\">{showCollegeCards}</div>\r\n            <h1 className=\"text-center\">THE END !!!</h1>\r\n          </div>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './Dashboard';\n\nfunction App() {\n  return (\n    <>\n      <Dashboard />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}